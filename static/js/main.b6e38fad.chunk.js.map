{"version":3,"sources":["reportWebVitals.js","Card.js","CardsList.js","SearchBox.js","Scroll.js","ErrorCheck.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","params","user","id","name","email","username","className","src","alt","CardList","robots","map","item","SearchBox","onSearchChange","onChange","type","placeholder","Scroll","style","overflowY","height","children","ErrorCheck","props","state","hasError","error","info","this","setState","color","Component","App","event","filter","target","value","fetch","response","json","users","filteredRobots","robot","toLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,mDCMCQ,EAVF,SAACC,GACV,MAAmCA,EAAOC,KAAlCC,EAAR,EAAQA,GAAGC,EAAX,EAAWA,KAAKC,EAAhB,EAAgBA,MAAMC,EAAtB,EAAsBA,SACtB,OACI,sBAAKC,UAAU,gDAAgDJ,GAAIA,EAAnE,UACI,qBAAKK,IAAG,+BAA0BF,EAA1B,cAAgDG,IAAI,cAC5D,6BAAKL,IACL,6BAAI,6BAAKC,UCINK,EAXE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACf,OACI,8BACKA,EAAOC,KAAI,SAACC,GACT,OACI,cAAC,EAAD,CAAoBX,KAAMW,GAAfA,EAAKV,UCIrBW,EATG,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,eAChB,OAAQ,8BACJ,uBACAC,SAAYD,EACZR,UAAU,mCACVU,KAAK,SAASC,YAAY,sBCEnBC,EAPA,SAAClB,GAEZ,OAAQ,qBAAKmB,MAAO,CAACC,UAAU,SAASC,OAAO,SAAvC,SACHrB,EAAOsB,YCoBDC,G,wDAtBX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAMC,GAEpBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAG5B,WAEI,OAAGG,KAAKJ,MAAMC,SAEF,oBAAIP,MAAO,CAACY,MAAM,OAAlB,0BAELF,KAAKL,MAAMF,a,GAnBDU,cC+CVC,E,kDAzCX,aAAe,IAAD,8BACV,gBAaJnB,eAAiB,SAACoB,GACd,EAAKJ,SAAS,CAAEK,OAAQD,EAAME,OAAOC,SAbrC,EAAKZ,MAAQ,CACTf,OAAQ,GACRyB,OAAQ,IAJF,E,qDAQd,WAAqB,IAAD,OAChBG,MAAM,8CACD7C,MAAK,SAAA8C,GAAQ,OAAIA,EAASC,UAC1B/C,MAAK,SAAAgD,GAAK,OAAI,EAAKX,SAAS,CAAEpB,OAAQ+B,S,oBAO/C,WAAU,IAAD,OAECC,EAAiBb,KAAKJ,MAAMf,OAAOyB,QAAO,SAAAQ,GAE5C,OAAOA,EAAMxC,KAAKyC,cAAcC,SAAS,EAAKpB,MAAMU,OAAOS,kBAI/D,OAAiC,IAA7Bf,KAAKJ,MAAMf,OAAOoC,OACV,yCAEJ,sBAAMxC,UAAU,KAAhB,UACJ,oBAAIA,UAAU,KAAd,4BACA,cAAC,EAAD,CAAWQ,eAAgBe,KAAKf,iBAChC,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAE,EAAF,CAAWJ,OAAQgC,e,GAnCrBV,aCAlBe,IAASC,OAAQ,cAAC,IAAMC,WAAP,UACb,cAAE,EAAF,MAEAC,SAASC,eAAe,SAM5B7D,M","file":"static/js/main.b6e38fad.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport 'tachyons'\r\n\r\nconst Card = (params) => {\r\n    const { id,name,email,username } = params.user;\r\n    return (\r\n        <div className='bg-light-green dib br3 pa3 ma2 grow  shadow-5' id={id}>\r\n            <img src={`https://robohash.org/${username}}?set=set2`} alt='Robo Face'></img>\r\n            <h3>{name}</h3>\r\n            <h4><em>{email}</em></h4>\r\n        </div>\r\n    );\r\n}\r\nexport default Card;\r\n","import Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n    return (\r\n        <div>\r\n            {robots.map((item)=>{\r\n                return (\r\n                    <Card key={item.id} user={item} />)\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({onSearchChange}) => {\r\n    return (<div>\r\n        <input\r\n        onChange = {onSearchChange}\r\n        className='pa3 ba b--green bg-lightest-blue'\r\n        type='search' placeholder='Search Friends'></input>\r\n    </div>)\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from 'react'\r\n\r\nconst Scroll = (params)=>\r\n{\r\n    return (<div style={{overflowY:'scroll',height:'700px'}}>\r\n        {params.children}\r\n    </div>)\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorCheck extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error,info)\r\n    {\r\n        this.setState({hasError:true});\r\n    }\r\n\r\n    render()\r\n    {\r\n        if(this.state.hasError)\r\n        {\r\n            return (<h1 style={{color:'red'}}>Error Alert!</h1>);\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorCheck;","import React, { Component } from 'react';\r\nimport CardList from './CardsList';\r\nimport SearchBox from './SearchBox';\r\nimport Scroll from './Scroll';\r\nimport './App.css'\r\nimport ErrorCheck from './ErrorCheck';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            filter: ''\r\n        };\r\n    };\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => this.setState({ robots: users }));\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ filter: event.target.value });\r\n    }\r\n\r\n    render() {\r\n\r\n        const filteredRobots = this.state.robots.filter(robot => {\r\n\r\n            return robot.name.toLowerCase().includes(this.state.filter.toLowerCase());\r\n\r\n        });\r\n\r\n        if (this.state.robots.length === 0)\r\n            return (<h1>Loading</h1>);\r\n\r\n        return (< div className='tc' >\r\n            <h1 className='f1'> Robo Friends </h1>\r\n            <SearchBox onSearchChange={this.onSearchChange} />\r\n            <ErrorCheck>\r\n                <Scroll>\r\n                    < CardList robots={filteredRobots} />\r\n                </Scroll>\r\n            </ErrorCheck>\r\n        </div>);;\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render( <React.StrictMode >\r\n    < App / >\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}